#include "ThreadedService.h"

using namespace System::Threading;
namespace System
{
	namespace Engine
	{
		/////////////////////////////////////////////////////////////
		ThreadedService::ThreadedService ( )
		/////////////////////////////////////////////////////////////
		{
			_pThread = NULL;
		}

		/////////////////////////////////////////////////////////////
		ThreadedService::~ThreadedService ( )
		/////////////////////////////////////////////////////////////
		{
			if ( _pThread )
				delete _pThread;
		}

		/////////////////////////////////////////////////////////////
		bool ThreadedService::Start ( )
		/////////////////////////////////////////////////////////////
		{
			_pThread = new Thread ( this );
			return _pThread->Start ( );
		}

		/////////////////////////////////////////////////////////////
		void ThreadedService::Stop( )
		/////////////////////////////////////////////////////////////
		{
			if ( _pThread && !this->IsDead () )
				_pThread->Shutdown ();
		}

		/////////////////////////////////////////////////////////////
		void ThreadedService::Run ( )
		/////////////////////////////////////////////////////////////
		{
			this->ServiceMethod ( );
			this->SetDead ( true );
		}
	}
}
